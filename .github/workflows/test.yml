name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn --batch-mode clean install

      - name: Run Unit Tests
        run: mvn test

      - name: Run Functional Tests
        run: mvn verify -Pfunctional-tests

      - name: Run Performance Tests
        run: mvn verify -Pperformance-tests

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=your_project_key -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build Docker Image
        run: docker build -t your_docker_image:latest .

      - name: Push to Nexus
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          docker login -u $NEXUS_USERNAME -p $NEXUS_PASSWORD your_nexus_repo_url
          docker tag your_docker_image:latest your_nexus_repo_url/your_docker_image:latest
          docker push your_nexus_repo_url/your_docker_image:latest

      - name: Push to JFrog Artifactory
        env:
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        run: |
          docker login -u $JFROG_USERNAME -p $JFROG_PASSWORD your_jfrog_repo_url
          docker tag your_docker_image:latest your_jfrog_repo_url/your_docker_image:latest
          docker push your_jfrog_repo_url/your_docker_image:latest
